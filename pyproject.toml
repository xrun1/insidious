[build-system]
    requires = ["poetry-core"]
    build-backend = "poetry.core.masonry.api"

[tool.poetry]
    name = "insidious"
    version = "0.1.10"
    description = "Self-hosted YouTube front-end"
    authors = ["xrun1 <126838916+xrun1@users.noreply.github.com>"]
    license = "AGPL-3.0-or-later"
    readme = "README.md"
    repository = "https://github.com/xrun1/insidious"
    keywords = [
        "youtube", "self-hosted", "front-end", "video",
        "yt-dlp", "invidious", "youtube-dl"
    ]
    classifiers = [
        "Development Status :: 4 - Beta",
        "Environment :: Web Environment",
        "Intended Audience :: End Users/Desktop",
        "Natural Language :: English",
        "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
        "Topic :: Multimedia :: Video :: Display",
        "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    ]

    [tool.poetry.scripts]
        insidious = "insidious.__main__:run"

    [tool.poetry.dependencies]
        python = "^3.12"
        typing_extensions = { version = "^4.13.2", python = "<3.13" }
        fastapi = "^0.115.12"
        jinja2 = "^3.1.6"
        pydantic = "^2.11.7"
        uvicorn = "^0.34.2"
        watchfiles = "^1.0.5"
        yt-dlp = {extras = ["default"], version = "2025.7.21"}
        docopt-ng = "^0.9.0"
        httpx = "^0.28.1"
        backoff = "^2.2.1"
        appdirs = "^1.4.4"
        websockets = "^15.0.1"
        lz4 = "^4.4.4"
        pure-protobuf = "^3.1.4"
        construct = "==2.10.68"

        [tool.poetry.dependencies.pymp4]
            git = "https://github.com/devine-dl/pymp4.git"
            branch = "construct-2.10-patch"

    [tool.poetry.group.dev.dependencies]
        ruff = "0.12.4"
        pyright = "1.1.402"
        ipdb = "0.13.13"
        pyperclip = "1.9.0"
        rich = "14.0.0"

[tool.ruff]
    line-length = 79
    preview = true
    target-version = "py311"
    lint.select = ["ALL"]
    lint.ignore = [
        "A", "ANN", "C90", "CPY", "DTZ", "EM", "FBT", "T20", "TD", "FIX", "D1",
        "D415", "D417", "E221", "E241", "E251", "E731", "N818", "PGH003",
        "PLW2901", "S101", "SIM102", "TRY003", "UP031", "UP032", "ERA001",
        "E116", "DOC201",
    ]

    [tool.ruff.lint.flake8-pytest-style]
        fixture-parentheses = false
        mark-parentheses = false

    [tool.ruff.lint.isort]
        combine-as-imports = true

    [tool.ruff.lint.pycodestyle]
        max-doc-length = 79

    [tool.ruff.lint.pydocstyle]
        convention = "google"

    [tool.ruff.lint.pylint]
        max-args = 15
        max-public-methods = 30
        max-returns = 20

[tool.pyright]
    pythonVersion = "3.11"
    typeCheckingMode = "strict"

    reportMissingTypeStubs = "none"
    reportUnknownArgumentType  = "none"
    reportUnknownMemberType = "none"
    reportUnknownParameterType = "none"
    reportUnknownVariableType = "none"

    # Handled by ruff
    reportPrivateUsage = "none"
    reportUnusedVariable = "none"
    reportUnusedImport = "none"

    reportImplicitOverride = "warning"
    reportImportCycles = "warning"
    reportMissingSuperCall = "warning"
    reportUninitializedInstanceVariable = "warning"
    reportUnnecessaryTypeIgnoreComment = "warning"
